@page "/fetchdata"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Net.Http.Headers
@inject HttpClient HttpClient
@inject IAccessTokenProvider TokenProvider
@inject NavigationManager Navigation


<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (_soups == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var soup in _soups.Soups)
            {
                <tr>
                    <td>@soup.Id</td>
                    <td>@soup.Name</td>
                    <td>@soup.Price</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private SoupListVm _soups;
    private BeverageListVm _beverages;
    private GarnishListVm _garnishes;
    private MeatListVm _meats;

    protected override async Task OnInitializedAsync()
    {
        var resumeUri = Navigation.Uri + $"?state=resumeSavingProfile";

        var tokenResult = await TokenProvider.RequestAccessToken(
            new AccessTokenRequestOptions
            {
                ReturnUrl = resumeUri
            });
        
        if (tokenResult.TryGetToken(out var token))
        {
            HttpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token.Value);
        }
        
        _soups = await new Client("https://localhost:7001", HttpClient).GetAllSoupAsync("1");
        // _beverages = await new Client("https://localhost:7001", HttpClient).GetAllBeveragesAsync("1");
        // _garnishes = await new Client("https://localhost:7001", HttpClient).GetAllGarnishesAsync("1");
        // _meats = await new Client("https://localhost:7001", HttpClient).GetAllMeatsAsync("1");
        //
        // var order = new CreateOrderDto()
        // {
        //     SoupId = _soups.Soups.First().Id,
        //     BeverageId = _beverages.Beverages.First().Id,
        //     GarnishId = _garnishes.Garnishes.First().Id,
        //     MeatId = Guid.Parse("02728ca1-3b75-4678-aed3-f608e6f2a951")
        // };
        //
        // await new Client("https://localhost:7001", HttpClient).CreateOrderAsync("1", order);
    }
}
