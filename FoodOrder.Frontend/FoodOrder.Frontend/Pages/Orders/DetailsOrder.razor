@page "/order/{OrderId:guid}"
@inject Client _client;
@inject IToastService _toast

<h1>Order Details</h1>

@if (_order is null)
{
    <div class="row">
        <div class="col">
            <img src="https://i.gifer.com/origin/b1/b128497bc8d6fcfefb93b88b260561a7_w200.gif" alt="Data loading..."/>
        </div>
    </div>
}
else
{
    <div class="table-responsive scrollbar">
        <table class="table table-bordered overflow-hidden">
            <colgroup>
                <col class="bg-light"/>
                <col/>
            </colgroup>
            <thead>
            <tr class="btn-reveal-trigger">
                <th scope="col">Name</th>
                <th scope="col">Value</th>
            </tr>
            </thead>
            <tbody>
            <tr class="btn-reveal-trigger">
                <td>@nameof(_order.Id)</td>
                <td>@_order.Id</td>
            </tr>
            <tr class="btn-reveal-trigger">
                <td>Completed</td>
                <td>@_order.IsCompleted</td>
            </tr>
            <tr class="btn-reveal-trigger">
                <td>Сustomer</td>
                <td>@_order.UserId</td>
            </tr>
            <tr class="btn-reveal-trigger">
                <td>@nameof(_order.Beverage)</td>
                <td>@_order.Beverage.Name</td>
            </tr>
            <tr class="btn-reveal-trigger">
                <td>@nameof(_order.Garnish)</td>
                <td>@_order.Garnish.Name</td>
            </tr>
            <tr class="btn-reveal-trigger">
                <td>@nameof(_order.Meat)</td>
                <td>@_order.Meat.Name</td>
            </tr>
            <tr class="btn-reveal-trigger">
                <td>@nameof(_order.Soup)</td>
                <td>@_order.Soup.Name</td>
            </tr>
            <tr class="btn-reveal-trigger">
                <td>Order time</td>
                <td>@_order.OrderTime.ToString("f")</td>
            </tr>
            <tr class="btn-reveal-trigger">
                <td>Price</td>
                <td>@_order.TotalPrice $</td>
            </tr>
            </tbody>
        </table>
        @if(!_order.IsCompleted)
        {
            <button class="btn btn-outline-success" @onclick="(CompleteOrder)">Complete order</button>
        }
    </div>
}

@code {

    [Parameter]
    public Guid OrderId { get; set; }

    private OrderDetailsVm _order;

    protected override async Task OnInitializedAsync()
    {
        _order = await _client.GetOrderByIdAsync(OrderId, "1");
    }
    
    private async Task CompleteOrder()
    {
        _order.IsCompleted = true;
        await _client.CompletedOrderAsync(_order.Id, "1");
        _toast.ShowSuccess($"Order {_order.Id} Completed!");
    }
}   