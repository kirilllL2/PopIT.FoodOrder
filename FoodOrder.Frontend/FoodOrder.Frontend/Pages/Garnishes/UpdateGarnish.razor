@page "/garnishes/{GarnishId:guid}/update"
@inject Client _client
@inject IToastService _toast

<h1 class="text-info">Update Garnish</h1>

<div class="row">
    <div class="col">
        @if (_garnishDto is not null)
        {
            <EditForm Model="_garnishDto" OnValidSubmit="Update">
                <DataAnnotationsValidator/>
                <div class="form-group">
                    <label>Garnish Name: </label>
                    <div>
                        <InputText class="form-control" @bind-Value="_garnishDto.Name"/>
                        <ValidationMessage For="(() => _garnishDto.Name)"/>
                    </div>
                </div>
                <label>Garnish Price: </label>
                <div>
                    <InputNumber class="form-control" @bind-Value="_garnishDto.Price"/>
                    <ValidationMessage For="(() => _garnishDto.Price)"/>
                </div>
                <button class="btn btn-outline-primary mt-3">Save</button>
            </EditForm>
        }
    </div>
</div>

@code {

    [Parameter]
    public Guid GarnishId { get; set; }

    private UpdateGarnishDto _garnishDto;

    protected override async Task OnInitializedAsync()
    {
        var garnish = await _client.GetGarnishByIdAsync(GarnishId, "1");
        _garnishDto = new UpdateGarnishDto
        {
            Name = garnish.Name,
            Price = garnish.Price
        };
    }

    private async Task Update()
    {
        await _client.UpdateGarnishAsync(GarnishId, "1", _garnishDto);
        _toast.ShowSuccess("Update Success!");
    }

}